# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

steps:
- script: |
    echo "---"
    DIR "C:\Program Files (x86)"
    echo "---"
    DIR "C:\Program Files (x86)\Microsoft Visual Studio\2017\"
    echo "---"
    DIR "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise"
    echo "---"
    DIR "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC"
    echo "---"
    DIR "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools"
    echo "---"
    DIR "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC"
    echo "---"
    DIR "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023"
    echo "---"
    DIR "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\include"
    echo "---"
    set
  displayName: 'printenv'

# https://github.com/Azure/azure-storage-cpplite  
- script: |
    git clone https://github.com/curl/curl.git -b curl-7_65_0 
    git clone https://github.com/openssl/openssl.git -b OpenSSL_1_1_1b
    .\curl\projects\build-openssl.bat vc14.1 x64 debug .\openssl\ -perlpath C:\Strawberry
    DIR .\openssl\build\
    DIR .\openssl\build\Win32\VC14.16\LIB Release\
    DIR .\openssl\build\Win32\VC14.16\LIB Debug\
    DIR .\openssl\build\Win64\VC14.16\LIB Release\
    DIR .\openssl\build\Win64\VC14.16\LIB Debug\
  displayName: 'install openssl'
    
- script: |
    ls C:\
    echo "---"
    DIR "C:\Build_OpenSSL_VC_32"
    echo "---"
    set
  displayName: 'explore tree'

- script: |	
    mkdir build	
    cd build	
    cmake ..	
    cmake --build . --config Release
  displayName: 'cmake test'
